package controller;

import java.util.ArrayList;
import java.util.List;

import javax.ejb.EJB;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.bean.SessionScoped;

import entities.TwitterEntity;
import model.Tweets;
import service.TwitterEJB;

import twitter4j.Status;

import twitter4j.Twitter;
import twitter4j.TwitterException;
import twitter4j.TwitterFactory;
import twitter4j.conf.ConfigurationBuilder;


@ManagedBean(name="twittercontroller")
@SessionScoped
public class TwitterController {
	private final static String CONSUMER_KEY = "ltCw6k7F9Es4UmWDqoh8mAXKS";
    private final static String CONSUMER_KEY_SECRET = "4k7sCw39Yx1XiB42pztclYmizbGPey7F3qQLc3gMpP3DHh0IGL";
    private final static String ACCESS_TOKEN = "266520273-c2vd8AGBY2Cgl9Mtk0pmZ2911JIgaGtlQglYQmav";
    private final static String ACCESS_TOKEN_SECRET = "JDFcInGlz9AHfJsoDvRHVcpv4qNXOcjrid9NFrUkkeLqb";
	
	@EJB
	TwitterEJB twitterservices;
	
	@ManagedProperty(value="#{tweet}")
	private Tweets tweet;
	
	public String addNewTwitter()
	{
		System.out.println("Sharon Lets see");
		twitterservices.AddNew(tweet.getEntity());
		return "ViewList.xhtml";
	}
	
	
	private List<TwitterEntity> twitterlist = new ArrayList<>();
	
	 public List<TwitterEntity> GetList() {
	    	twitterlist = twitterservices.findTwitts();
	        return twitterlist;
	    }
	
	public Tweets getTweet() {
		return tweet;
	}

	public void setTweet(Tweets tweet) {
		this.tweet = tweet;
	}
	public static Twitter getTwitterinstance() {
		/**
		 * if not using properties file, we can set access token by following way
		 */
		
		ConfigurationBuilder cb = new ConfigurationBuilder();
	    cb.setDebugEnabled(true)
	      .setOAuthConsumerKey(CONSUMER_KEY)
	      .setOAuthConsumerSecret(CONSUMER_KEY_SECRET)
	      .setOAuthAccessToken(ACCESS_TOKEN)
	      .setOAuthAccessTokenSecret(ACCESS_TOKEN_SECRET);
	    TwitterFactory tf = new TwitterFactory(cb.build());
	    Twitter twitter = tf.getInstance();
	    
	    System.out.println("Hi Sharon" + twitter);
		return twitter;
		
	}
	
	public String createTweet() throws TwitterException {
	    Twitter twitter = getTwitterinstance();
	    System.out.println(twitter);
	    Status status = twitter.updateStatus(tweet.getEntity().getTweetBody());
	    System.out.println(status.getText());
	    twitterservices.AddNew(tweet.getEntity());
	    return status.getText();
	}

}
